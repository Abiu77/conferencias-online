{"version":3,"sources":["app.js","mapa.js","horas.js","ponentes.js","regalos.js","registro.js","slider.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponible","json","id","horaSeleccionada","onclick","lat","lng","zoom","L","setView","tileLayer","attribution","addTo","marker","bindPopup","openPopup","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","console","log","ctx","getElementById","getContext","Chart","type","data","labels","regalo","datasets","label","total","backgroundColor","borderColor","borderWidth","options","scales","y","beginAtZero","plugins","legend","display","obtenerDatos","Swal","resumen","boton","seleccionarEvento","disabled","titulo","parentElement","mostrarEventos","fire","title","text","icon","confirmButtonText","limpiarEventos","eventoDOM","botonEliminar","innerHTML","eliminarEvento","noRegistro","preventDefault","regaloId","eventosId","datos","FormData","append","method","body","then","location","href","token","reload","Swiper","Navigation","opciones","slidesPerView","spaceBetween","freeMode","navigation","nextEl","prevEl","breakpoints","100","300","768","1200","use","tags_input","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode"],"mappings":"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","file":"bundle.js","sourcesContent":["import './horas.js';\r\nimport './ponentes.js';\r\nimport './tags.js';\r\nimport './slider.js';\r\nimport './mapa.js';\r\nimport './registro.js';\r\nimport './regalos.js';","if(document.querySelector('#mapa')) { \r\n\r\n    const lat = -31.4062303\r\n    const lng = -64.1978516\r\n    const zoom = 16\r\n\r\n    const map = L.map('mapa').setView([lat, lng], zoom);\r\n\r\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n    }).addTo(map);\r\n    \r\n    L.marker([lat, lng]).addTo(map)\r\n        .bindPopup(`\r\n            <h2 class=\"mapa__heading\">DevWebCamp</h2>\r\n            <p class=\"mapa__texto\">Centro de Convenciones Plaza de la MÃºsica</p>\r\n        `)\r\n        .openPopup();\r\n}","(function() {\r\n\r\nconst horas = document.querySelector('#horas');\r\n\r\nif(horas) {\r\n\r\n    const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n    const dias = document.querySelectorAll('[name=\"dia\"]');\r\n    const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n    const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n    \r\n    categoria.addEventListener('change', terminoBusqueda);\r\n    dias.forEach( dia => dia.addEventListener('change', terminoBusqueda))\r\n\r\n    let busqueda = {\r\n        categoria_id: +categoria.value || '',\r\n        dia: +inputHiddenDia.value || ''\r\n    }\r\n\r\n    if(!Object.values(busqueda).includes('')) {\r\n       (async () => {\r\n            await buscarEventos();\r\n\r\n            const id = inputHiddenHora.value;\r\n    \r\n            // Resaltar la hora actual\r\n            const horaSeleccionada = document.querySelector(`[data-hora-id =\"${id}\"]`);\r\n            \r\n            horaSeleccionada.classList.remove('horas__hora--deshabilitada');\r\n            horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n            horaSeleccionada.onclick = seleccionarHora;\r\n        })()\r\n    }\r\n\r\n    function terminoBusqueda(e) {\r\n        busqueda[e.target.name] = e.target.value;\r\n        \r\n        // Reiniciar los campos ocultos y el selector de horas\r\n        inputHiddenDia.value = '';\r\n        inputHiddenHora.value = '';\r\n\r\n        const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n        if(horaPrevia) {\r\n           horaPrevia.classList.remove('horas__hora--seleccionada');\r\n        }\r\n\r\n        if(Object.values(busqueda).includes('')) {\r\n            return\r\n        }\r\n\r\n        buscarEventos();\r\n    }\r\n\r\n    async function buscarEventos() {\r\n        const { dia, categoria_id } = busqueda\r\n        const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n        \r\n        const resultado = await fetch(url);\r\n        const eventos = await resultado.json();\r\n\r\n        obtenerHorasDisponible(eventos);\r\n    }\r\n\r\n\r\n    function obtenerHorasDisponible(eventos) {\r\n        // Reiniciar las horas\r\n        const listadoHoras = document.querySelectorAll('#horas li');\r\n        listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'));\r\n\r\n        // Comprobar elementos ya tomados, y quitar la variable de deshabilitado\r\n        const horasTomadas = eventos.map( evento => evento.hora_id);\r\n        const listadoHorasArray = Array.from(listadoHoras);\r\n       \r\n        const resultado = listadoHorasArray.filter( li => !horasTomadas.includes(li.dataset.horaId));\r\n        resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada')); \r\n\r\n        const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n        horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));    \r\n    }\r\n\r\n    function seleccionarHora(e) {\r\n\r\n         // Deshabilitar la hora previa, si hay un nuevo click\r\n         const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n         if(horaPrevia) {\r\n            horaPrevia.classList.remove('horas__hora--seleccionada');\r\n         }\r\n        \r\n        // Agregar clase de seleccionado\r\n        e.target.classList.add('horas__hora--seleccionada');\r\n        inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n        // Llenar el campo oculto de dÃ­a\r\n        inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n})();","(function() {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden   = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value) {\r\n            (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const { nombre, apellido} = ponente\r\n                // Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n            })()\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            formatearPonentes(resultado);\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            return resultado;\r\n\r\n        }\r\n\r\n        function formatearPonentes( arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente;\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = [];\r\n            }\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n           while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n           }\r\n\r\n           if(ponentesFiltrados.length > 0) {\r\n               ponentesFiltrados.forEach(ponente => {\r\n               const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n\r\n                    // AÃ±adir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay resultados para tu bÃºsqueda!';\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n    }\r\n\r\n }\r\n})();","(function() {\r\n    const grafica = document.querySelector('#regalos-grafica');\r\n    if(grafica) {\r\n\r\n        obtenerDatos()\r\n        async function obtenerDatos() {\r\n            const url = '/api/regalos'\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            console.log(resultado);\r\n            \r\n            const ctx = document.getElementById('regalos-grafica').getContext('2d');\r\n            const myChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: resultado.map( regalo => regalo.nombre),\r\n                    datasets: [{\r\n                        label: '',\r\n                        data: resultado.map( regalo => regalo.total),\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    },\r\n                    plugins: {\r\n                        legend: {\r\n                            display: false\r\n                        }\r\n                    }\r\n                }\r\n            });            \r\n        }\r\n\r\n      }\r\n})();","import Swal from 'sweetalert2';\r\n\r\n(function(){\r\n    let eventos = [];\r\n    const resumen = document.querySelector('#registro-resumen');\r\n    if(resumen) {\r\n\r\n    const eventosBoton = document.querySelectorAll('.evento__agregar');\r\n    eventosBoton.forEach( boton => boton.addEventListener('click', seleccionarEvento));\r\n\r\n    const formularioRegistro = document.querySelector('#registro');\r\n    formularioRegistro.addEventListener('submit', submitFormulario)\r\n    \r\n    mostrarEventos();\r\n\r\n    function seleccionarEvento({target}) {\r\n        \r\n        if(eventos.length < 5) {\r\n            // Deshabilitar el evento\r\n            target.disabled = true;\r\n            eventos = [...eventos, {\r\n                id: target.dataset.id,\r\n                titulo: target.parentElement.querySelector('.evento__nombre').textContent.trim()\r\n            }]\r\n        \r\n            mostrarEventos();            \r\n        } else {\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'MÃ¡ximo 5 eventos por registro!',\r\n                icon: 'error',\r\n                confirmButtonText: 'OK'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function mostrarEventos() {\r\n        // Limpiar HTML\r\n        limpiarEventos();\r\n\r\n        if(eventos.length > 0 ) {\r\n            eventos.forEach( evento => {\r\n                const eventoDOM = document.createElement('DIV');\r\n                eventoDOM.classList.add('registro__evento');\r\n\r\n                const titulo = document.createElement('H3');\r\n                titulo.classList.add('registro__nombre');\r\n                titulo.textContent = evento.titulo\r\n\r\n                const botonEliminar = document.createElement('BUTTON');\r\n                botonEliminar.classList.add('registro__eliminar');\r\n                botonEliminar.innerHTML = `<i class=\"fa-solid fa-trash\"></i>`\r\n                botonEliminar.onclick = function() {\r\n                    eliminarEvento(evento.id)\r\n                }\r\n\r\n                // Renderizar en el HTML\r\n                eventoDOM.appendChild(titulo);\r\n                eventoDOM.appendChild(botonEliminar);\r\n                resumen.appendChild(eventoDOM);\r\n\r\n            })\r\n        } else {\r\n            const noRegistro = document.createElement('P');\r\n            noRegistro.textContent = 'No hay eventos, aÃ±ada hasta 5 del lazo izquierdo';\r\n            noRegistro.classList.add('registro__texto');\r\n            resumen.appendChild(noRegistro);\r\n        }\r\n    }\r\n\r\n    function eliminarEvento(id) {\r\n        eventos = eventos.filter( evento => evento.id !== id);\r\n        const botonAgregar = document.querySelector(`[data-id=\"${id}\"]`);\r\n        botonAgregar.disabled = false;\r\n        mostrarEventos();\r\n    }\r\n\r\n    function limpiarEventos() {\r\n       while(resumen.firstChild) {\r\n         resumen.removeChild(resumen.firstChild);\r\n       } \r\n    }\r\n\r\n    async function submitFormulario(e) {\r\n        e.preventDefault();\r\n\r\n        // Obtener el regalo\r\n        const regaloId = document.querySelector('#regalo').value\r\n\r\n        const eventosId = eventos.map(evento => evento.id);\r\n\r\n        if(eventosId.length === 0 || regaloId === '') {\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'Elige al menos un Evento y un Regalo!',\r\n                icon: 'error',\r\n                confirmButtonText: 'OK'\r\n            })\r\n            return;\r\n        }\r\n\r\n        // Objeto de formdata\r\n        const datos = new FormData();   \r\n        datos.append('eventos', eventosId);\r\n        datos.append('regalo_id', regaloId);\r\n\r\n        const url = '/finalizar-registro/conferencias'\r\n        const respuesta = await fetch(url, {\r\n            method: 'POST',\r\n            body: datos\r\n        });\r\n        const resultado = await respuesta.json();\r\n        \r\n        if(resultado.resultado) {\r\n            Swal.fire(\r\n                'Registro Exitoso!',\r\n                'Tus conferencias se han almacenado y tu registro fue satisfactorio, Â¡te esperamos en DevWebCamp!',\r\n                'success'\r\n            ).then( () => location.href = `/boleto?id=${resultado.token}`);\r\n        } else {\r\n            Swal.fire({\r\n                title: 'Error',\r\n                text: 'Hubo un error!',\r\n                icon: 'error',\r\n                confirmButtonText: 'OK'\r\n            }).then( () => location.reload() )            \r\n        }\r\n    }\r\n}\r\n\r\n})();","import Swiper, { Navigation } from 'swiper';\r\nimport 'swiper/css';\r\nimport 'swiper/css/navigation';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    if(document.querySelector('.slider')) {\r\n        const opciones = {\r\n            slidesPerView: 3,\r\n            spaceBetween: 15,\r\n            freeMode: true,\r\n            navigation: {\r\n                nextEl: '.swiper-button-next',\r\n                prevEl: '.swiper-button-prev'\r\n            },\r\n            breakpoints: {\r\n                100: {\r\n                    slidesPerView: 1\r\n                },\r\n                300: {\r\n                    slidesPerView: 2\r\n                },\r\n                768: {\r\n                    slidesPerView: 3\r\n                },\r\n                1200: {\r\n                    slidesPerView: 4\r\n                }\r\n            }\r\n        }\r\n\r\n        Swiper.use([Navigation])\r\n        new Swiper('.slider', opciones)\r\n    }\r\n});","(function() {\r\n    const tags_input = document.querySelector('#tags_input');\r\n\r\n    if(tags_input) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tags_input.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag (e) {\r\n            if(e.keyCode === 44) {\r\n\r\n                if(e.target.value.trim() === '' || e.target.value <1 ) {\r\n                    return\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()]\r\n                tags_input.value = '';\r\n                \r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent= '';\r\n            tags.forEach( tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent= tag;\r\n                etiqueta.ondblclick = eliminarTag\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove()\r\n            tags = tags.filter(tag => tag !== e.target.textContent)\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})() // IIFE"]}